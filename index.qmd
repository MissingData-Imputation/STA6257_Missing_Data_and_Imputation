---
title: "Missing Data and Imputation"
author:
  - Javier Estrada
  - Michael Underwood
  - Elizabeth Subject-Scott
date: '`r Sys.Date()`'
format:
  html:
    code-fold: true
    css: styles.css
    theme: morph
    toc: true
    toc-location: left
course: STA 6257 - Advanced Statistical Modeling
bibliography: references.bib # file contains bibtex for references
#always_allow_html: true # this allows to get PDF with HTML features
editor: 
  markdown: 
    wrap: 72
---

[Website](https://missingdata-imputation.github.io/STA6257_Missing_Data_and_Imputation/)

[Slides](https://rstudio.hmcse.uwf.edu/s/4c3307ed3545b19414f79/files/STA6257_Missing_Data_and_Imputation/Slides.html#/title-slide)

## Introduction

#### What is missing data?

Missing data occurs when there are missing values in a dataset. There
are many reasons why this occurs. It can be intentional or unintentional
and can be classified into the following three categories [@van2020]:

-   Missing completely at random (MCAR) -- missing data is completely
    independent of other variables

-   Missing at random (MAR) -- there is a relationship between missing
    data and other variables

-   Not missing at random (NMAR) -- missing data is dependent on
    observed data

The problem with missing data is that it does not give a true
representation of the dataset and can lead to bias when analyzing. This
in turn "reduces the statistical power of the analysis." There are two
ways to handle missing values: delete or impute.

#### Deleting missing data

Listwise deletion is when the entire observation (row) is removed from
the dataset. Pairwise deletion is when the variable (column) of an
observation is removed. Deleting missing data can lead to omitting
useful information.

T-tests and chi-square tests can be used to assess pairs of predictor
variables to determine whether the groups' means differ significantly.
If significant, the null hypothesis is rejected; therefore, listwise
deletion would be wasteful. Alternate methods of dealing with the
missing data is recommended (pairwise deletion or imputation).

#### What is imputation?

Imputation is the method of replacing missing data with an estimate so
as to have a full data set in order to analyze. There are two types:
single and multiple. Single imputation is when only one estimate is
used; multiple imputation uses various estimates.

Multiple imputation is most commonly used.

[@don2013]

[@won2023]

[@kan2013]

[@hug2019]

[@car2021]

[@alr2021]

[@oli2003]

[@don2006]

[@ura2020]

[@cha2023]

[@mai2023]

[@jav2021]

[@cao2021]

[@end2001]

[@tho2022]

[@fan2021]

[@fie2008]

[@str2008]

[@ham2021]

[@yan2005]

[@ped2017]

[@pam2016]

[@van2020]

## Methods

#### Single Imputation

#### Multiple Imputation
```{r, warning=FALSE, echo=T, message=FALSE}
#loading packages
library(DiagrammeR)
```

```{r}
DiagrammeR::grViz("digraph {

# initiate graph
graph [layout = dot, rankdir = LR, label = 'The MICE-Process\n\n',labelloc = t, fontcolor = DarkSlateBlue]

# global node settings
node [shape = rectangle, style = filled, fillcolor = AliceBlue, fontcolor = DarkSlateBlue]

# label nodes
incomplete [label =  'Incomplete data set']
imputed1 [label = 'Imputed \n data set 1']
estimates1 [label = 'Estimates from \n analysis 1']
rubin [label = 'Rubin rules', shape = diamond]
combined [label = 'Combined results']
imputed2 [label = 'Imputed \n data set 2']
estimates2 [label = 'Estimates from \n analysis 2']
imputedm [label = 'Imputed \n data set m']
estimatesm [label = 'Estimates from \n anaalysis m']


# edge definitions with the node IDs
incomplete -> imputed1 [arrowhead = vee, color = DarkSlateBlue]
imputed1 -> estimates1 [arrowhead = vee, color = DarkSlateBlue]
estimates1 -> rubin [arrowhead = vee, color = DarkSlateBlue]
incomplete -> imputed2 [arrowhead = vee, color = DarkSlateBlue]
imputed2 -> estimates2 [arrowhead = vee, color = DarkSlateBlue]
estimates2-> rubin [arrowhead = vee, color = DarkSlateBlue]
incomplete -> imputedm [arrowhead = vee, color = DarkSlateBlue]
imputedm -> estimatesm [arrowhead = vee, color = DarkSlateBlue]
estimatesm -> rubin [arrowhead = vee, color = DarkSlateBlue]
rubin -> combined [arrowhead = vee, color = DarkSlateBlue]
}")
```
Figure 1: The MICE-process (Rubin 1987)

## Analysis and Results

## Data and Visualization

A study was conducted to determine how...

```{r, warning=FALSE, echo=T, message=FALSE}
# loading packages 
library(tidyverse)
library(knitr)
library(ggthemes)
library(ggrepel)
library(dslabs)
```

```{r, warning=FALSE, echo=TRUE}
# Load Data
# kable(head(murders))
# 
# ggplot1 = murders %>% ggplot(mapping = aes(x=population/10^6, y=total)) 
# 
#   ggplot1 + geom_point(aes(col=region), size = 4) +
#   geom_text_repel(aes(label=abb)) +
#   scale_x_log10() +
#   scale_y_log10() +
#   geom_smooth(formula = "y~x", method=lm,se = F)+
#   xlab("Populations in millions (log10 scale)") + 
#   ylab("Total number of murders (log10 scale)") +
#   ggtitle("US Gun Murders in 2010") +
#   scale_color_discrete(name = "Region")+
#       theme_wsj()
```

## Statistical Modeling

## Conclusion

## References
